//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspTest.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BetaGrpContex : DbContext
    {
        public BetaGrpContex()
            : base("name=BetaGrpContex")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DepartmentTbl> DepartmentTbls { get; set; }
        public virtual DbSet<EmployeeTbl> EmployeeTbls { get; set; }
        public virtual DbSet<LoginTb> LoginTbs { get; set; }
    
        public virtual int DeleteData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteData", idParameter);
        }
    
        public virtual ObjectResult<DetailsData_Result> DetailsData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetailsData_Result>("DetailsData", idParameter);
        }
    
        public virtual int EditData(Nullable<int> id, string name, string gender, Nullable<int> salary, Nullable<int> departmentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditData", idParameter, nameParameter, genderParameter, salaryParameter, departmentIdParameter);
        }
    
        public virtual int InsertData(string name, string gender, Nullable<int> salary, Nullable<int> departmentId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertData", nameParameter, genderParameter, salaryParameter, departmentIdParameter);
        }
    
        public virtual ObjectResult<sp_personInfo_Result> sp_personInfo(string dname)
        {
            var dnameParameter = dname != null ?
                new ObjectParameter("Dname", dname) :
                new ObjectParameter("Dname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_personInfo_Result>("sp_personInfo", dnameParameter);
        }
    
        public virtual ObjectResult<sp_report_Result> sp_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_report_Result>("sp_report");
        }
    
        public virtual ObjectResult<ViewIndex_Result> ViewIndex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewIndex_Result>("ViewIndex");
        }
    }
}
